{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Projects/react/stack_overflow/src/components/MainApp.js\";\nimport React, { Component } from \"react\";\nimport LoadingPage from \"./LoadingPage\";\nimport NavigationBar from \"./NavigationBar\";\nimport Pagination from \"./Pagination\";\nimport TopQuestions from \"./TopQuestions\";\nimport Header from \"./Header\";\n\nclass MainApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questions: [],\n      isLoading: false,\n      currentPage: 1,\n      quesPerPage: 10,\n      title: \"Top Questions\"\n    };\n\n    this.formSubmit = async e => {\n      const searchQue = e.target.elements.searchQue.value;\n      e.preventDefault();\n      const api_call = `https://api.stackexchange.com/2.2/search/advanced?order=desc&sort=activity&title=${searchQue}&site=stackoverflow`;\n      const response = await fetch(api_call);\n      const data = await response.json();\n      this.setState({\n        questions: data.items,\n        isLoading: true,\n        title: \"Search Results\"\n      });\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        currentPage: pageNumber\n      });\n    };\n  }\n\n  //To display Top Questions on the Home Page\n  async componentDidMount() {\n    const url = \"https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=stackoverflow\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      questions: data.items,\n      isLoading: true\n    });\n    console.log(this.state.questions);\n  } //To search the Questions from StackOverFlow API\n\n\n  render() {\n    const {\n      currentPage,\n      quesPerPage,\n      questions,\n      isLoading\n    } = this.state;\n    const indexofLastPage = currentPage * quesPerPage;\n    const indexofFirstPage = indexofLastPage - quesPerPage;\n    const currentPageQue = questions.slice(indexofFirstPage, indexofLastPage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavigationBar, {\n      formSubmit: this.formSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), !isLoading ? /*#__PURE__*/React.createElement(LoadingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: this.state.title,\n      totalQuestions: this.state.questions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TopQuestions, {\n      questions: currentPageQue,\n      loading: this.state.isloading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      quePerPage: quesPerPage,\n      totalQues: questions.length,\n      paginate: this.paginate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default MainApp;","map":{"version":3,"sources":["/home/akshay/Projects/react/stack_overflow/src/components/MainApp.js"],"names":["React","Component","LoadingPage","NavigationBar","Pagination","TopQuestions","Header","MainApp","state","questions","isLoading","currentPage","quesPerPage","title","formSubmit","e","searchQue","target","elements","value","preventDefault","api_call","response","fetch","data","json","setState","items","paginate","pageNumber","componentDidMount","url","console","log","render","indexofLastPage","indexofFirstPage","currentPageQue","slice","isloading","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport LoadingPage from \"./LoadingPage\";\nimport NavigationBar from \"./NavigationBar\";\nimport Pagination from \"./Pagination\";\nimport TopQuestions from \"./TopQuestions\";\nimport Header from \"./Header\";\n\nclass MainApp extends Component {\n  state = {\n    questions: [],\n    isLoading: false,\n    currentPage: 1,\n    quesPerPage: 10,\n    title: \"Top Questions\",\n  };\n\n  //To display Top Questions on the Home Page\n  async componentDidMount() {\n    const url =\n      \"https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=stackoverflow\";\n\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ questions: data.items, isLoading: true });\n    console.log(this.state.questions);\n  }\n\n  //To search the Questions from StackOverFlow API\n  formSubmit = async (e) => {\n    const searchQue = e.target.elements.searchQue.value;\n    e.preventDefault();\n    const api_call = `https://api.stackexchange.com/2.2/search/advanced?order=desc&sort=activity&title=${searchQue}&site=stackoverflow`;\n    const response = await fetch(api_call);\n    const data = await response.json();\n    this.setState({\n      questions: data.items,\n      isLoading: true,\n      title: \"Search Results\",\n    });\n  };\n\n  paginate = (pageNumber) => {\n    this.setState({ currentPage: pageNumber });\n  };\n\n  render() {\n    const { currentPage, quesPerPage, questions, isLoading } = this.state;\n\n    const indexofLastPage = currentPage * quesPerPage;\n    const indexofFirstPage = indexofLastPage - quesPerPage;\n    const currentPageQue = questions.slice(indexofFirstPage, indexofLastPage);\n\n    return (\n      <div>\n        <NavigationBar formSubmit={this.formSubmit} />\n\n        {!isLoading ? (\n          <LoadingPage />\n        ) : (\n          <div>\n            <Header\n              title={this.state.title}\n              totalQuestions={this.state.questions}\n            />\n            <TopQuestions\n              questions={currentPageQue}\n              loading={this.state.isloading}\n            />\n            <Pagination\n              quePerPage={quesPerPage}\n              totalQues={questions.length}\n              paginate={this.paginate}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MainApp;\n"]},"metadata":{},"sourceType":"module"}