{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Projects/react/stack_overflow/src/components/Main.js\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport LoadingPage from \"./LoadingPage\";\nimport NavigationBar from \"./NavigationBar\";\nimport Pagination from \"./Pagination\";\nimport TopQuestions from \"./TopQuestions\";\n\nconst Main = () => {\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [quesPerPage] = useState(10);\n  const [title, setTitle] = useState(\"Top Questions\");\n  useEffect(() => {\n    const url = \"https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=stackoverflow\";\n\n    async function fetchData() {\n      const data = await axios.get(url);\n      const quesData = data.data.items;\n      setQuestions(quesData);\n      setIsLoading(true);\n      console.log(questions);\n    }\n\n    fetchData();\n  }, [isLoading]); //To search the Questions from StackOverFlow API\n\n  const formSubmit = async e => {\n    const searchQue = e.target.elements.searchQue.value;\n    e.preventDefault();\n    const api_call = `https://api.stackexchange.com/2.2/search/advanced?order=desc&sort=activity&title=${searchQue}&site=stackoverflow`;\n    const data = await axios.get(api_call);\n    const quesData = data.data.items;\n    setQuestions(quesData);\n    setIsLoading(true);\n    setTitle(\"Questions tagged\");\n  };\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const indexofLastPage = currentPage * quesPerPage;\n  const indexofFirstPage = indexofLastPage - quesPerPage;\n  const currentPageQue = questions.slice(indexofFirstPage, indexofLastPage);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavigationBar, {\n    formSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), !isLoading ? /*#__PURE__*/React.createElement(LoadingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: title,\n    totalQuestions: questions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TopQuestions, {\n    questions: currentPageQue,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    quePerPage: quesPerPage,\n    totalQues: questions.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/akshay/Projects/react/stack_overflow/src/components/Main.js"],"names":["axios","React","useEffect","useState","Header","LoadingPage","NavigationBar","Pagination","TopQuestions","Main","questions","setQuestions","isLoading","setIsLoading","currentPage","setCurrentPage","quesPerPage","title","setTitle","url","fetchData","data","get","quesData","items","console","log","formSubmit","e","searchQue","target","elements","value","preventDefault","api_call","paginate","pageNumber","indexofLastPage","indexofFirstPage","currentPageQue","slice","length"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport LoadingPage from \"./LoadingPage\";\nimport NavigationBar from \"./NavigationBar\";\nimport Pagination from \"./Pagination\";\nimport TopQuestions from \"./TopQuestions\";\n\nconst Main = () => {\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [quesPerPage] = useState(10);\n  const [title, setTitle] = useState(\"Top Questions\");\n\n  useEffect(() => {\n    const url =\n      \"https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=stackoverflow\";\n    async function fetchData() {\n      const data = await axios.get(url);\n      const quesData = data.data.items;\n      setQuestions(quesData);\n      setIsLoading(true);\n      console.log(questions);\n    }\n    fetchData();\n  }, [isLoading]);\n\n  //To search the Questions from StackOverFlow API\n  const formSubmit = async (e) => {\n    const searchQue = e.target.elements.searchQue.value;\n    e.preventDefault();\n    const api_call = `https://api.stackexchange.com/2.2/search/advanced?order=desc&sort=activity&title=${searchQue}&site=stackoverflow`;\n\n    const data = await axios.get(api_call);\n    const quesData = data.data.items;\n    setQuestions(quesData);\n    setIsLoading(true);\n    setTitle(\"Questions tagged\");\n  };\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const indexofLastPage = currentPage * quesPerPage;\n  const indexofFirstPage = indexofLastPage - quesPerPage;\n  const currentPageQue = questions.slice(indexofFirstPage, indexofLastPage);\n\n  return (\n    <div>\n      <NavigationBar formSubmit={formSubmit} />\n\n      {!isLoading ? (\n        <LoadingPage />\n      ) : (\n        <div>\n          <Header title={title} totalQuestions={questions} />\n          <TopQuestions questions={currentPageQue} loading={isLoading} />\n          <Pagination\n            quePerPage={quesPerPage}\n            totalQues={questions.length}\n            paginate={paginate}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}